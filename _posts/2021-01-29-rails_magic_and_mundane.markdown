---
layout: post
title:      "Rails Magic & Mundane"
date:       2021-01-29 21:55:54 +0000
permalink:  rails_magic_and_mundane
---


From the other students I've spoken with, the Rails portfolio project is the most difficult project that we've undertaken in the name of Flatiron school so far. Looking at the lesson plan, it's not difficult to see why: the sections dedicated to learning Sinatra are less than half of the sections dedicated to learning Rails (minus bonus sections & the project tab). Despite so much of the Ruby on Rails framework relying on "Rails Magic" (fancy code running behind the scenes), learning how to code with Rails is incredibly challenging. 

Rails is so magical that it can be rather obtuse about why something might be bugged out (despite its best attempts to provide relevant error messages). Even placing that aside, there's just so *much* of Rails that there are a multitude of ways for things to go wrong. While I ran into plenty of thorny syntax errors that weren't immediately apparent and slowed down my progress and workflow, there were also several instances where there was a program-breaking bug that couldn't be determined without a few days' worth of frustration and fruitless Googling.

Right from the beginning, my Rails project seemed intent on breaking in as many ways as possible to avoid being functional in any fashion. The first problem I ran into was related to my views—specifically, they wouldn't load up in the browser at all. I lost *four days* to trying to unravel this mystery. It took multiple sit downs with my cohort lead to figure out the issue so I could actually move onto actually coding. At the end of those four days, my cohort lead managed to come across [this article](https://www.spritle.com/blogs/2019/11/25/how-webpacker-and-rails-6-tortured-me-and-how-i-survived/) that had stubbornly refused to show up during all my hours of Googling and Stack Overflow lurking. Even then, the solution wasn't exactly as described in this article—I also had to get rid of an extra line in my `application.html.erb` file entirely—but thankfully I was able to begin coding. (Other attempts at solutions that failed include, but are not limited to: uninstalling & reinstalling Webpacker, Yarn, and *Rails itself*, some of them more than once. I also made a new project file & Github repo entirely.)

I ran into several more bumps along the way that slowed my progress to less than a snail's crawl, which was incredibly frustrating and nerves-fraying. Time limit aside, less than twenty-four hours ago as of writing this, I was convinced that I wasn't going to be able to finish my project at all. I had run into another incredibly strange bug that Rails couldn't de-mystify through its error messages. This time, it had to do with OmniAuth & Github: it was failing in a number of ways despite me checking, re-checking, and cross-referencing multiple guides in setting it up. Any time that I managed a work-around, it seemed to fail in a new and spectacularly disastrous way. One of the errors that I spent the longest on was Rails declaring that there was no `[GET] /github/auth` route; any attempts to unravel as to *why* this was through the program was utterly unhelpful. Cue another session of unhelpful Googling & Stack Overflow stalking. I ended up doing what I should have done hours earlier and asked other students if anyone had run into a similar issue (after I spent some time scrolling through the Slack channel to see if anyone else had already posted about it). I ended up scheduling a time later that night with two other students to work on it, and hrough our efforts we got everyone's code working (or at least onto new errors)—something I was convinced simply wasn't going to happen when I was working on my own earlier that same day.

Demystifying Rails magic isn't easy, nor does it seem feasible under certain circumstances. There's still plenty of code happening behind the curtains in Rails that I don't understand, but this journey has been a constant exercise in understanding why it's important to communicate with others. It was only through others' assistance that I was able to work on my project at all in the face of unworkable conditions; plenty of jokes get made about "the power of friendship," but I think the power of human connection is able to triumph a multitude of seemingly impossible tasks. Even Rails.
